# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# =====================
# === Main routes =====
GET         /                                                                       controllers.HomeController.index

# =============================
# === User =====
GET         /home                                                                   controllers.HomeController.home
GET         /info                                                                   controllers.HomeController.userInfo
POST        /settings                                                               controllers.user.SettingsController.updateSettings


# =============================
# === Organization routes =====
GET         /orgs                                                                   controllers.organization.OrganizationController.list()
GET         /orgs/:o                                                                controllers.organization.OrganizationController.view(o: OrganizationId)

# ==========================
# ===== Courses routes =====
GET         /orgs/:o/courses                                                        controllers.organization.CourseController.list(o: OrganizationId)
GET         /orgs/:o/courses/create                                                 controllers.organization.CourseController.createForm(o: OrganizationId)
POST        /orgs/:o/courses                                                        controllers.organization.CourseController.createSubmit(o: OrganizationId)
GET         /orgs/:o/courses/:c                                                     controllers.organization.CourseController.view(o: OrganizationId, c: CourseId)
POST        /orgs/:o/courses/:c/join                                                controllers.organization.CourseController.join(o: OrganizationId, c: CourseId)
GET         /orgs/:o/courses/:c/user/:u                                             controllers.organization.CourseController.studentSummary(o: OrganizationId, c: CourseId, u: UserId)

# --------------
# Course Quizzes
GET         /orgs/:o/courses/:c/quizzes/create                                      controllers.quiz.QuizController.createForm(o: OrganizationId, c: CourseId)
POST        /orgs/:o/courses/:c/quizzes                                             controllers.quiz.QuizController.createSubmit(o: OrganizationId, c: CourseId)
GET         /orgs/:o/courses/:c/quizzes/:z                                          controllers.quiz.QuizController.view(o: OrganizationId, c: CourseId, z: QuizId, a: Option[AnswerId])
POST        /orgs/:o/courses/:c/quizzes/:z/update                                   controllers.quiz.QuizController.update(o: OrganizationId, c: CourseId, z: QuizId)
POST        /orgs/:o/courses/:c/quizzes/:z/attach/:q                                controllers.quiz.QuizController.attachAjax(o: OrganizationId, c: CourseId, z: QuizId, q: QuestionId)
POST        /orgs/:o/courses/:c/quizzes/:z/remove                                   controllers.quiz.QuizController.remove(o: OrganizationId, c: CourseId, z: QuizId)
GET         /orgs/:o/courses/:c/quizzes/:z/json                                     controllers.quiz.QuizController.quizJsonCourse(o: OrganizationId, c: CourseId, z: QuizId)
GET         /orgs/:o/courses/:c/quizzes/json/create                                 controllers.quiz.QuizController.createJson(o: OrganizationId, c: CourseId)
POST        /orgs/:o/courses/:c/quizzes/json/create                                 controllers.quiz.QuizController.createSubmitJson(o: OrganizationId, c: CourseId)

# ---------------------
# Course Quiz Questions
POST        /orgs/:o/courses/:c/quizzes/:z/questions/create                         controllers.quiz.QuestionController.createCourseSubmit(o: OrganizationId, c: CourseId, z: QuizId)
GET         /orgs/:o/courses/:c/quizzes/:z/questions/:q                             controllers.quiz.QuestionController.view(o: OrganizationId, c: CourseId, z: QuizId, q: QuestionId, a: Option[AnswerId])
POST        /orgs/:o/courses/:c/quizzes/:z/questions/:q/remove                      controllers.quiz.QuestionController.remove(o: OrganizationId, c: CourseId, z: QuizId, q: QuestionId)
POST        /orgs/:o/courses/:c/quizzes/:z/questions/:q/removeAjax                  controllers.quiz.QuestionController.removeAjax(o: OrganizationId, c: CourseId, z: QuizId, q: QuestionId)
GET         /questions/:q/json                                                      controllers.quiz.QuestionController.questionJson(q: QuestionId)
GET         /orgs/:o/courses/:c/quizzes/:z/questions/:q/json                        controllers.quiz.QuestionController.questionJsonCourse(o: OrganizationId, c: CourseId, z: QuizId, q: QuestionId)

# ---------------------
# Course Self Quiz
GET         /orgs/:o/courses/:c/selfQuiz                                            controllers.organization.CourseController.studentSelfQuiz(o: OrganizationId, c: CourseId)
GET         /orgs/:o/courses/:c/questions/:q/selfQuestion                           controllers.organization.CourseController.studentSelfQuestion(o: OrganizationId, c: CourseId, q: QuestionId, a: Option[AnswerId])
POST        /orgs/:o/courses/:c/questions/:q/answers/create                         controllers.quiz.AnswerController.createSelfQuizCourseSubmit(o: OrganizationId, c: CourseId, q: QuestionId)

# ----------------------
# Course Quiz Answers
POST        /orgs/:o/courses/:c/quizzes/:z/questions/:q/answers/create              controllers.quiz.AnswerController.createCourseSubmit(o: OrganizationId, c: CourseId, z: QuizId, q: QuestionId)

# ----------------------
# Student Summaries
GET         /orgs/:o/courses/:c/quizzes/:z/questions/:q/student/:s                  controllers.quiz.QuestionController.studentSummary(o: OrganizationId, c: CourseId, z: QuizId, q: QuestionId, s: UserId)
GET         /orgs/:o/courses/:c/quizzes/:z/questions/:q/answer/:a/student/:s        controllers.quiz.QuestionController.studentSummaryAnswerSpecified(o: OrganizationId, c: CourseId, z: QuizId, q: QuestionId, a: AnswerId, s: UserId)

# ----------------------
# Question library
GET         /library                                                                controllers.library.LibraryController.list()
GET         /library/create                                                         controllers.library.LibraryController.createQuestionView()
POST        /library/create                                                         controllers.library.LibraryController.createQuestionSubmit()
GET         /library/question/:q                                                    controllers.library.LibraryController.viewQuestion(q: QuestionId, a: Option[AnswerId])
POST        /library/question/:q                                                    controllers.library.LibraryController.answerQuestion(q: QuestionId)
POST        /library/question/:q/archive                                            controllers.library.LibraryController.archive(q: QuestionId, a: Option[AnswerId])
POST        /library/query                                                          controllers.library.LibraryController.questionListAjax()

# ----------------------
# Quiz library
GET         /quizzes/:z/json                                                        controllers.quiz.QuizController.quizJson(z: QuizId)

# ==============================
# Auxiliary routes

# === Javascript Routing =====
GET         /javascriptRoutes                                                       controllers.ApplicationController.javascriptRoutes

# ===== Start auth routes ======
GET         /auth/signIn                                                            controllers.auth.AuthController.signIn
GET         /auth/signUp                                                            controllers.auth.AuthController.signUp
GET         /auth/form                                                              controllers.auth.AuthController.formClient
GET         /auth/google                                                            controllers.auth.AuthController.googleClient
#GET     /auth/viewdb                controllers.auth.AuthController.viewLoginDb
POST        /auth/createLogin                                                       controllers.auth.AuthController.createLogin
# Consent Form
GET         /consent                                                                controllers.auth.ConsentController.consent(goTo: Option[String], errorInfo: Option[String])
POST        /consentPost                                                            controllers.auth.ConsentController.consentSubmit(goTo: Option[String])
GET         /noconsent                                                              controllers.auth.ConsentController.noConsent
POST        /revokeconsent                                                          controllers.auth.ConsentController.revokeConsent
# ===== End auth routes ======

# ===== Start play-pac4j routes ======
GET         /callback                                                               @org.pac4j.play.CallbackController.callback()
POST        /callback                                                               @org.pac4j.play.CallbackController.callback()
GET         /casProxyCallback                                                       @org.pac4j.play.CallbackController.callback()
POST        /casProxyCallback                                                       @org.pac4j.play.CallbackController.callback()
GET         /logout                                                                 @org.pac4j.play.LogoutController.logout()
GET         /auth/loginForm                                                         controllers.auth.AuthController.loginForm
# ===== End play-pac4j routes ======

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                                           controllers.Assets.versioned(path="/public", file: Asset)

# Google site ownership verification (https://support.google.com/webmasters/answer/35179?hl=en)
GET         /googleaea4ea0f93c23f36.html                                            controllers.Assets.at(path="/public/google", file="googleaea4ea0f93c23f36.html")

